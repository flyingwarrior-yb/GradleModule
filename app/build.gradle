apply plugin: 'com.android.application'
apply from: "package.gradle"

def cfg = rootProject.ext.android
def librarys = rootProject.ext.dependencies
def exclude = rootProject.ext.excludes
def tinker = rootProject.ext.tinker
def url = rootProject.ext.url
def startUpload = rootProject.ext.startUpload
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    dexOptions {
        jumboMode = true
    }

    defaultConfig {
        ndk { abiFilters "armeabi", "armeabi-v7a", "x86", "mips" }
        applicationId cfg.applicationId
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode//更新次数
        versionName cfg.versionName//版本号
//        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]
        //Tinker配置信息
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        buildConfigField "String", "MESSAGE", "\"${tinker.message}\""
        buildConfigField "String", "TINKER_ID", "\"${tinker.id}\""
        buildConfigField "String", "PLATFORM", "\"${tinker.plateform}\""
        //Tinker相关配置end======================================
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            buildConfigField "String", "AlphaUrl", "\"${url["release"]}\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled true
            shrinkResources true
            debuggable true
            buildConfigField "String", "AlphaUrl", "\"${url["release"]}\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
}
apply from: "tinker.gradle"
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    librarys.each { k, v -> compile v }
    excludes.each { entry ->
        compile(entry.key) {
            excludes.value.each { childEntry ->
                exclude(childEntry.key, childEntry.value)
            }
        }

    }
}

task toFir << {
    startUpload()
}
